// Generated by CoffeeScript 1.6.3
var Keys, _;

_ = require('underscore');

Keys = (function() {
  function Keys(keyFor) {
    if (keyFor == null) {
      keyFor = function(x) {
        return x;
      };
    }
    this.keyForValue = keyFor;
    this.keyToValue = {};
  }

  Keys.prototype.keyPresent = function(key) {
    return this.keyToValue[key] !== void 0;
  };

  Keys.prototype.valuePresent = function(o) {
    return this.keyToValue[this.keyForValue(o)] !== void 0;
  };

  Keys.prototype.add = function(o) {
    var key;
    if (!o) {
      return null;
    }
    key = this.keyForValue(o);
    this.keyToValue[key] = o;
    return key;
  };

  Keys.prototype.remove = function(o) {
    if (!o) {
      return null;
    }
    return delete this.keyToValue[this.keyForValue(o)];
  };

  Keys.prototype._key = function(value) {
    return this.add(value);
  };

  Keys.prototype._value = function(key) {
    if (!key) {
      return null;
    }
    return this.keyToValue[key];
  };

  Keys.prototype.key = function(values) {
    var _this = this;
    if (Array.isArray(values)) {
      return _.map(values, function(x) {
        return _this._key(x);
      });
    } else {
      return this._key(values);
    }
  };

  Keys.prototype.value = function(keys) {
    var _this = this;
    if (Array.isArray(keys)) {
      return _.map(keys, function(x) {
        return _this._value(x);
      });
    } else {
      return this._value(keys);
    }
  };

  Keys.prototype.exportKeyFunction = function() {
    var _this = this;
    return function(v) {
      return _this.key(v);
    };
  };

  Keys.prototype.exportValueFunction = function() {
    var _this = this;
    return function(k) {
      return _this.value(k);
    };
  };

  return Keys;

})();

exports.Keys = Keys;
